jenkins is an automation to which manages continious integration and continious deployment 
installation of jenkins in local 
- search jenkins install
- run firstly  java installation command from jenkins step and then run  jenkins installation  commands 
- now run sudo systemctl enable jenkins
- run locally on http://localhost:8080 
- now run sudo cat and the path and copy password and paste it in jenkins administrator pass  
- click on suggested plugins 
- now add you credencials 

install jenking on aws 
- create an instance of t2 micro ubuntu 
- enable port 8080 through custom tcp in in your ip 
- ssh it in locally 
- now copy public ip of instance and add 8080 and remove s form https and seach  - http:// public ip of instance : 8080 
- now run sudo cat and the path and copy password and paste it in jenkins administrator pass  
- click on suggested plugins 
- now add you credencials  

- pipeline - A DevOps pipeline is a series of automated processes and tools that help developers and operations teams build and deploy code to production. 
- agents - agents are created in jenkins to distrbute the load in diffenet servers 
---------------------------------------------------------------------------------------------------------------------------------------------------

-- CREATING AGENT USING AWS 
#### AWS #####
- create a ec2 named as agent  and ssh it by adding 8080 port  - now install java using jeckins site -  create ssh key using command 

##### In master node #####
- cd ~/.ssh - for accessing ssh folder 
- ssh-keygen this command will create two keys one is public and other is private 
- cat id - for read id 
- copy public key and past it un agents ssh-authourization key in last line 
- copy private key and past it in jenkins credentials 

#### jenkins dashboard  ######
- click on node - create a node - name the node , description , remote root directory -/home/ubuntu , label - agent name , launch method launch using ssh , enter host ip addrss of agent node , now enter credential key(private key ) which we have created in master node  , kind - ssh  ,id -ubunutu ,username -ubuntu ,non verification stretegy 
-----------------------------------------------------------------------------------------------------------------------------------------------------
#### use agent in pipeline 
-pipeline {
      agent{label "agent "} - here we enter our agent node name which we have created 
now this file will run using agent node 
-----------------------------------------------------------------------------------------------------------------------------------------------------

### Declarative pipeline - using djengo notes app 
-check github project and paste project link 
- check github hook trigger for GITscm polling 
now write pipeline 
      pipeline{
          agent{}
          stages{
              stage("code"){
                steps{
                    echo "this cloning the code "
                }
              }
              stage("Build"){
                steps{
                    echo "this is building the code "
                }
              }
              stage("Test"){
                steps{ 
                    echo "this is testing the code  "
                }
              }
              stage("Deploy"){
                step{
                    echo "this is deploying the code "
                }
              }
          }
      }

-> for see the pipeling there is plugin which we need to download go to manager> plugins > download pipeline view > restart 

 this is what we need to do in project 
-github clone > docker build and puch  > dokcer hub> ec2 

-- project steps -- prereq - install  - docker.io and  - sudo apt-get install docker-compose-v2  in your master bracch in ec2 
1. copy the link of django app from git hub -(shubham londhe )
2. pipeline{
          agent{}
          stages{
              stage("code"){
                steps{
                    echo "this cloning the code "
                    git url: "https://github.com/LondheShubham153/django-notes-app.git", branch:"main"
                    echo " cloning success"
                }
              }
              stage("Build"){
                steps{
                    echo "this is building the code "
                    sh "docker build -t notes-app:latest ."
                }
              }
             stage("Push to docker hub "){
                steps{
                    echo "pushing the image to socker hub "
                    withCredentials([])
                    sh "dokcer login -u uditmeharwal "
                    sh "docker image tag notes-app:latest uditmeharwal/notes-app:latest"]
                    sh "docker uditmeharwal/push notes-app:latest"
                    
                }
              }
              
              stage("Deploy"){
                step{
                    echo "this is deploying the code "
                    sh "docker compose up -d"
                }
              }
          }
      }
3. add 8000 port in your instance at custom tcp from anywhere  now the app is deployed 
4. credentials binding -> manage jenkins > credentials > add > username of docker hub  > go to dockerhub and create access tocken and paste the password to the docker hub > id -dockerHubCred > create 
