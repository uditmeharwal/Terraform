-OSI model Here is the text from the image:
1. **PHYSICAL LAYER**  
   Transmits raw bit stream over the physical medium.

2. **DATA LINK LAYER**  
   Defines the format of data on the network.

3. **NETWORK LAYER**  
   Decides which physical path the data will take.

4. **TRANSPORT LAYER**  
   Transmits data using transmission protocols including TCP and UDP.

5. **SESSION LAYER**  
   Maintains connections and is responsible for controlling ports and sessions.

6. **PRESENTATION LAYER**  
   Ensures that data is in a usable format and is where data encryption occurs.

7. **APPLICATION LAYER**  
   Human-computer interaction layer, where applications can access the network services.
-TCP/IP model 
-IP/Subnets -subnet devided an ip into various segments and a user can use the ip if he is connect from one ip
-DNS -domain name system 
-nat gateway -network access translator  it allow to translate public ip and private ip of any subnet and help to communicate between them   
-internet gateway - which allow user to access vpc cloud 
-routing table - this table help internet gateway to give ip address of subnet which are present in vpc and help to access the application 
-firewall -prevent unauthorise access and control internet security 
-VPC -virtual private cloud under which EC2 instance is created 

>first update system >sudo apt get install ngnix >cd /var/www/html >sudo vim index.html> past your html code >your_ip.80
> go to EC2 instance > instance id >security > security group >edit bunds >add rule>change source to anywhere ip4>
it will giv permission to EC2 to access the website which we deploy from ngnix from anywhere 

-route 53 -service present in the aws which allow to buy  your domain at cheap price 
-Load balancer -distribute the traffic application load balancer and network load balancer 
>ec2 > load balancer > create 

--------------------------------------------------------------------------
