t -Elastic ips - for preventing the ip not to change after restart devices ->allocate ip address>action > associate elastic ip > choose instance > done 
-----------------------------------------------------------------------------------
EBS elastic block storage
-ecc2  dashboard > ebs volume > create volume 
-types of volume 
-iops -input output operation per second
-general purpose- balanced price and performance 
-provisioned iops - best and hight capaciy volume 
-magnetic -very cheaper but aws dont recommend 


-----------------------------------------------------------------------------------

 snapshot -it help to take a copy of our machine or our data . incase if our data got affected by any software issue or configuration issue then we can recover it by using our last snap shot this facility available in vm ware, aws ebs also (it help to take a backup incase we loose data we can recover the data ) 
-aws store the snapshot in s3 bucket
-lifecycle policy -for automatically backup the data at the particular time 
->snapshot > recycle bin > create retension > setup -it will create a recycle bin through which we can restore the data
------------------------------------------------------------------------------------
Ami amazone machine image  -ya help karta hai kisi istance ki image banana mai for example hamari kisi instance may koi software hai jo hmna setup kiya hai  and vo  koi work karta hai (like ngnix run website)  to ami huma provide karta hai ki huma bar bar same installationa or running na karni pda software ki ya use pehla sa he install karka rakhta hai to jab hum koi naya instance bnayaga to usma huma ya sab software pehla sa install milega jo humna main ami instance mai install kiya tha 

create a instance > right click on instance > image and template > create image > now ami in created >now lauch ami image of machine which is exact copy of mai instance 
for using  an instance of ami which we created - go to lauch instance > select my ami >  create and lauch 

share any ami -ami> action > edit permission > there you have share account facility
for delete ami > ami > action > dergister > go to snapshot > delete snapshot 
---------------------------------------------------------------------------------------
Load balancer- for balancing the load on server 
-types of load balancer 

-classic load balancer 
create 4 ec2 instance> name the balancer >  set protocol > create security group> add instance > add tag>

-applicaton load balancer -for this load balancer we need to create target group and then use application load 
target group > select instance > target group is created >create application load balancer 

-if you want to add the condition like is user add the /test/ in url then the load balancer will transfer to another load balancer 
go to load balancer > listener > view edits rule > click on + > add path condition(like /test/) > forward to another load balancer  

group sitickyness means stick on the particular load balancer until it turn off 
target group >1 group > attributes > edit > stickyiness on> 

-network load balancer - it transfer the data from one point to another point without knowing the data and deliver the data to perticular port which we have feed 

-------------------------------------------------------------------------------------------------
Auto scaling group (asg) if the number of users increase then autoscaling allow use to increase the number of servers automatically
-vertical scaling  -resizing one server according to load 
-horizontal scaling -increase the number of severs according to the load 

launch template > autoscaling group > create > select template > 

types of automatic scaling 
scheduled scaling  - at a particular time number of servers become increase 
predictive scaling - predict and arrange the servers according to the load 
dynamic scaling -  simple scale
		   step scaling
		   target scaling 

aws cloud watch -watch for monitoring the data 
----------------------------------------------------------------------------------------------------
network interface (nic)
create > attach > select instance >

reserve instance -this is the type of instance which is use to buy an instance for a period of time 

----------------------------------------------------------------------------------------------------
IAM - manage user axcess and also give them access to use particular tool in aws 
user group - group of various users which have access to use a technology 
MFA user - multi factor authontification 
use aws cli -cammand line interface 
	     add user > use default settings only allow admin to acess >security credintials > create access key > command line interface > use command enter credentials 

role - the use of role is to give the specific permission to any instance like they dont need to use sduo for running admin commands we give them permission in role and the usie the instance > select security > them modify iam role > choose the particular role then the permission is ready to use 

cloud shell -it is online commandline interface which user can use 
--------------------------------------------------------------------------------------------------
Amazon simple storage service (s3 bucket)
publically access and object from bucket -go to bucket > permission > edit policy > click on policy generator > select policy s3 > then allow > prinnciple * > action getobject > then bucket arn > add statement > copy policy and paste it > enter resource = /* and save 

versioning in s3 - go to bucket properties > enable bucket versioning 

static website hosting - upload your webside files in bucket > make bucket public > go to static website hosting > edit > enable > save > bucket > permission > bucket policy > make policy > 

s3 Acceleration  this is the method which help to increase the speed for transfering the file to a long distance 
- create bucket -  open bucket > transfer acceleration > Enable  and open console > enter ipconfigure>aws  s3 ls > aws cp 1.jpg s3://bucket-name   for acceleration uploading ( aws cp 1.jpg s3://bucket-name --endpoint-url link_of_accelerated_url )

s3 replication  make copy of s3 bucket 
same region replication 
cross region replication 

create two bucket > go to management > replication rule > create rule > the data will automatically replicated to another bucket which we have selected as destination 

logs of s3 bucket 
logs always create in seperate bucket if we create in same bucket then loop of logging will start
bucket > properties > server access logging > enable > choose target where to save the logs > 

storage classes 
during uploading the file we are allow to choose the which type of storage and it is in property section 

life cycle management in aws s3 -it is use to change the storage type after a period of time automatically or terminate the storage after a period of time
bucket > management > create life cycle rule > 

aws intelligence tiering 
frequent , in frequent , archive - after 30 days of non use transfer to infrequent and after that transfer to archieve 
bucket > properties > intellience tearing archieve config > create config >  enter the days according to your demand 

cors policy -the most important usable technique 
permission > cross origion resource sharing 

presign url -this is the type of url which is use to share your data to other using a autoexpire link 
object > action > share presigned url > give time > create 
it help to share the object without publicing it 

encription 
client side -it is the type of encription in which client enript the file then upload it 
server side 
----------------------------------------------------------------------------------------------------
cloud front- securly deliver content with low latency and high transfer speed 
if you want to access data from far location it allow us to get the data from far loacation to our nearest point and also save a copy of data to nearest point if again any user want the file then we can access the file again 

create an ec2 instance > go to cloud front and create a cloud front > enter domain name of ec2 > 

remove the cache files(the file which is store in nearest cloud front ) which are stored in cloud front location which comes from the far location and store to the cloud front 
cloud front > distribution > open > invalidation > add path for all /*

block all ip of the instance only access via cloudfront link 
vpc > manage prefix list > click on cloudfront > details > copy prefix id> ec2 > security group > edit inbound rule > delete port 80 > add http> custom and past the cloudfront id > save > 

attach s3 bucket to cloudfront 
create a private s3 bucket > create cloud front > select bucket save > update policy > copy policy and click on link > edit bucket policy > paste > save 

for accessing  cloud front using the link according to path we select 
origion create > fill all details > copy policy > paste to permissions to your s3 bucket >  save > behaviour > create > select path > select origin like ec2 , s3 > save > create the particular file in your s3 or ec2 linke index.html 

Error page managing in cloudfront 
create > select reponse code > enter page path which we want to show > 

geographic restrictions 
the range of ip address which we want to allow to access or block the access of the page we enter here 

----------------------------------------------------------------------------------------------------------------------------------
vpc

FOR CREATE VPC AND SETUP AS USE IN PUBLIC 
>open vpc >select region> name your vpc> >enter ipv4 > create vpc
>subnet >create subnet > select vpc > name_subnet > availabily fill > create subnet
>create ec2 instance > select your vpc in ec2 instance > auto assign public ip(enable)
>internet gateway>create internet gateway>name them > create >attach to vpc >attach internet gateway 
>route_table >create > name > choose vpc > create 
>route_table > subnet association > edit subnet association > choose subnet and attach >edit rout > add rout > 0.0.0 > internet gateway choose  save

FOR CREATE TWO VPC AND ATTACH TOGETHER (vpc peering) -ip cidr of both vpc should be different 
-same process follow as in vpc 
- vpc > peering connections >creat > name > select vpc> create >go to acton >accept request 
-route table > routes > edit > add route > add ip of other vpc > peering  connection > 
-do the same routing process for other route table 
> go to instances > securitysecurity group >edit inboud rule >add rule > all icmp > cidr block  test mai production ki range > 
>same for other instance > cidr may prod mai test ki ip dalega 

public subnet to private 
> create a subnet > add ip cidr 10.0.1.0/24 > create 
>nat gateway > create > choose public subnet > create 
>route >choose the route according to your vpc > routs > add > nat gateway >  save 
 
NACL -network access control list 
it allow to block the pacticular network to access .it comes after security group 

vpc dashboard> security> network acl > create > select vpc > save > now open the inbound rule > add rule > save 

transit gateway -this is use for peering of multiple vpcs using one common vpc . vpc should be of same region 
transit gateway> create > name > asn > save > transist gateway attachment > name > select vpc > create > same as this create transit for all other vpc 
go to route table > add route 10.0.0.0/16 , 192.168.0.0/16 to target transit gateway attachment  >  do this process for all the vpc route tables 

flow logs - give the info of recieving and sending packets it give the information of traffic .this feature available in all services
vpc > create flow log > name > all > time >  

vpc end point - it enables customers to privately connect to supported AWS services it allow us to connect to the local network and use services without giving internet acces to the instance 
create a vpc and setup it (subnet , routetable ) > go to endpoint > create > select service > select vpc > select route table > save > now we can access instance services which we have selected and use it without give internet access( security group ) to the instance 
two type of vpc endpoint gateway and interface 

AWS VPN -virtual private network it is use to secure and access the private network
AWS site to site vpn (108 video )

for site to site vpn connection we need to use two different account of aws and one is in mumbai location other is in singapor region 
create ec2 in both region  > select vpc and subnet in ec2 which we need to create in both region  > copy the public ip of singapor ec2 and past it in customor gateway of mumbai region > create customer gateway > add ip of singapor ec2 > save > go to virtual private gateway of mumbai > create > action > attach to vpc > then choose the vpc which we create in mumbai region > now go to site to site connection in mumbai > create > select vpg > routing static > give static ip (192.168.0.0/24 ,172.16.100.0/24) > local ipv4 cidr (92.168.0.0/24) > remote ipv4 network cidr 172.16.100.0/24)>  now create > now go to instance in singapor and connect > sudo apt install openswan > now download config form vpc connection  of mumbai region > select openswan > download > follow step written in download file and do this in singapor instance > open route table in mumbai > action > edit route propogations > enable > now go to route table of singapor edit > add inbound > 172.16.100.0/24 > target instance > choose instance > choose instance in singapor > networking > change source destination check > stop > 

egress only internet gateway  it is similar as of nat gateway only the differance is it only support ipv6 network
create > choose vpc > save 
--------------------------------------------------------------------------------------------------------------------------------------------------
Route 53 
dns domain name system - it convert url in ip address 
domain register > register domain > search >  select domain and buy it > now go to request section > click on action and varify payment > now varify it through your mail link > now setup instance and setup ngnix and make a web page 

hosted zone -here we can manage all the configrations related to the domain 
soa records - start of authority domain details 
ns records -use to route traffic to the hosted zone 

when we buy the domain hosted zone will automatically created 
hosted zone > create > select record type according to the need > enter ip address > create record 
A - property use for ipv4 ip address 
AAAA -property use for ipv6 ip address 

if we use bucket the website name should be  same as of your bucket name and property should be CNAME
CNAME- property use when we dont have any ip address and wwe use it in bucket  , it is only use for subdomain not for whole domain  
hosted zone > create select CNAME > enter bucket link > create 

alias -if we want to use bucket as main domain so alias is used . alias is most used because it is free of cost. using ttl we can optimize the cost by increase one day time  

TXT record - we can only access txt recoard by command line and programatically . this is only use for varify that the user who use this is the owner of this domain 

MX record - this is mail related server 

PTR record -it maps an ip address using the domain name 

routing police - 
		simple routing policy - this does not give use health check policy during hosting 
		weigthage routing policy -,it allow us to enter percentage of load and distribute the load of  different ip address ,also have health check feature 
		geolocation routing police - it allow us to access the particular ip address according to the loaction ,for all countries we use default 
		latency based routing location - the server which have lo latency it will redirect the ip address to the loaction ip
		failover routing police - it is primary and secondary based police  which in case of unhealthy(fail) of primary server it will use secondary server 
		multivalue answer routing policy - in this we can use multiple ip addresss with health check 
		ip based routing policy - for this we need to create cidr > then add ip address of instance > now choose the policy and select the cidr location 

Health checks - it is use to check the health of the website it is working perfectly or not 

paren health check - enter name > ch0oose status of other health check > choose all the sites which we want to check > create 

traffic policy - it is gui based  traffic policy system with which we can easily manage and host the domain 

logging - create a bucket > query logging > choose bucket > add a vpc > save > ssh on instance > now use commands > this all wee automatically in s3 bucket in logs 

DNS firewall - create> add rule > add your own domain list > enter the site which we want to block > choose action > save > now click on associated vpc > choose vpc > done

private hosted zone - create hosted zone > select private > select vpc > now create > open hosted zone > create  record > add ip address > create > 
only the vpc through which we have hosted the site can only access the site peering vpc is also not access the site

inbound end points - inbound endpoints generally refer to the points where external traffic or requests are received by services or resources in your AWS environment . it allow the quarys which are outside the vpc they can access the vpc 
create > select vpc > select security group > select both address > 

outbound end point- steps are same  > create rule > forward > select vpc > 
------------------------------------------------------------------------------------------------------------------------
relational database service (Rds)
create database > select data base type > enter user name and password > publically access or not > create 

connect to insatance - go to ec2 instance > sudo apt get update > sudo apt install mysqlclient > add mysql to security group > mysql -h hostname link -u admin -p password > you are connected to db now 
client depend up on the type of database 

read replica -it is the read only copy of the relational database with which we can read the data base and in case of any poroblem we can find the problem  and solve it without touching the original database . this has ability to syncronize with original database 
dashboard > actoion > create read replica > enable deletation protection > create  

multi az deployment - in case the main database is not working it take all the  quaries and solve it and prevent to down the server this feature available during creating the database 
also available in action > enable multy ag deployment 

rds proxy -available between application and aws rds 
database > create proxy >select target 
--------------------------------------------------------------------------------------------------------------------------
aws aurora database - competable with sql and postgrel , provide more feature then other dtabase 
creation of the database is similar as of other 

cross region replication - in which he create replica in anothr region 

parameter group - these are default , if we want to change  we need to create a parameter group 

--------------------------------------------------------------------------------------------------------------------------
DynamonDB it does not need to create a database  you only need to create table 
dynamo db > create table > enter primary key > create > select table > action > create items > now choose type of attributes >  save 
 
point in time recovery -table > backups > edit > allow > done 

replication -table > globle table > create replica > select location > done 

export or store data in s3  - export to s3 > select table > destination > export 

import data in table -import in s3 > select bucket > done 
---------------------------------------------------------------------
simple email service - AWS SES 
SES > identities > create > select domain or email address > enter your email > go to main > confirm > send test email >  go to account dashboard > view get set up page > request production access > enter your request > then request will accept by aws within 24 hrs 

use production area for sending email 
get set up > request for production access > enter the request details >  approve within 24 hrs 

reputation metrics > 
bounce rate -the mails which are not deliver are bounce rate 

customize the mail sub domain >identifiers  > select your domain >  custom mail from domain > edit > add domain > save > now publish dns records .
----------------------------------------------------------------------
SNS -simple notification service  - this provide various notifictaion service 
create a topic > create > create subscription > choose protocol (email) > enter email address > create  > varify mail using link > topics > global > publish message > enter msg > send 

sending text msg -text messaging > sandbox destination phone number > add phone number > varify number > create subscription > select sms select number > publish msg > write message > send 

-----------------------------------------------------------------------------
cloud watch -monitoring service 
 it help to examin and monitoring the system and incase thr system is out of service it will notify us 

namespace and metrics 
cloud watch > metrics > all metrics > browse >   

create custom dashboard 
dashboard > create > name > add wigits >  save or you can share it to other user through mail




















